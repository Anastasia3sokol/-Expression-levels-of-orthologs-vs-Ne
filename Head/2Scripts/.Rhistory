p_val_intercept <- c(p_val_intercept, b[1,4])
R_sq <- c(R_sq, sum$r.squared)
R_sq_adj <- c(R_sq_adj, sum$adj.r.squared)
residual_std_err <- c(residual_std_err, sum$sigma)
}
number_of_species <- c()
genes <- colnames(df_hsp90_sp)[-c(1,179)]
residual_std_err <- c()
df <- c()
for (gene in genes) {
a <- na.omit(df_hsp90_sp[,c("Species", gene, 'Generation_Length')])
species <- a[,'Species']
number_of_species <- c(number_of_species, length(species))
lg <- lm(a[,gene]~0+a[,'Generation_Length'], data = a)
sum <- summary(lg)
b <- sum$coefficients
slopes <- c(slopes, b[2,1])
p_val_slope <- c(p_val_slope, b[2,4])
intercept <- c(intercept, b[1,1])
p_val_intercept <- c(p_val_intercept, b[1,4])
R_sq <- c(R_sq, sum$r.squared)
R_sq_adj <- c(R_sq_adj, sum$adj.r.squared)
residual_std_err <- c(residual_std_err, sum$sigma)
}
b
b[1]
b[4]
sum$r.squared
sum$adj.r.squared
sum$sigma
slopes <- c()
p_val_slope <- c()
R_sq <- c()
R_sq_adj <- c()
number_of_species <- c()
genes <- colnames(df_hsp90_sp)[-c(1,179)]
residual_std_err <- c()
df <- c()
for (gene in genes) {
a <- na.omit(df_hsp90_sp[,c("Species", gene, 'Generation_Length')])
species <- a[,'Species']
number_of_species <- c(number_of_species, length(species))
lg <- lm(a[,gene]~0+a[,'Generation_Length'], data = a)
sum <- summary(lg)
b <- sum$coefficients
slopes <- c(slopes, b[1])
p_val_slope <- c(p_val_slope, b[4])
R_sq <- c(R_sq, sum$r.squared)
R_sq_adj <- c(R_sq_adj, sum$adj.r.squared)
residual_std_err <- c(residual_std_err, sum$sigma)
}
#table with linear regression parameters
results <- data.frame(genes, slopes, p_val_slope, number_of_species, R_sq, R_sq_adj, residual_std_err)
write.table(results, '../../Body/3_Results/hsp.like.genes.linear.model.results.kn.ks.vs.generation.length.mammals.right.way.zerro.intercepttxt')
write.table(results, '../../Body/3_Results/hsp.like.genes.linear.model.results.kn.ks.vs.generation.length.mammals.right.way.zerro.intercept.txt')
###drawing plots
results <- read.table('../../Body/3_Results/hsp.like.genes.linear.model.results.kn.ks.vs.generation.length.mammals.right.way.zerro.intercept.txt')
boxplot(results[results$p_val_slope < 0.05,'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
boxplot(results[,'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
title('Slopes of linear regression \"Kn/Ks\" ~ \"generation length\"\n for genes closed to hsp90 (red)\n n = 84, , intercept = 0')
title('Slopes of linear regression \"Kn/Ks\" ~ \"generation length\"\n for genes closed to hsp90 (red)\n n = 84, intercept = 0')
legend(x = 50, y = 0.005,legend = 'hsp90', col = 'red', pch = 19)
legend(x = 0.5, y = 0.005,legend = 'hsp90', col = 'red', pch = 19)
legend(x = 50, y = 8e-05,legend = 'hsp90', col = 'red', pch = 19)
legend(x = 0, y = 8e-05,legend = 'hsp90', col = 'red', pch = 19)
legend(x = 0, y = 8e-5,legend = 'hsp90', col = 'red', pch = 19)
boxplot(results[results$p_val_slope < 0.05,'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
title('Slopes of linear regression \"Kn/Ks\" ~ \"generation length\"\n for genes closed to hsp90 (red)\n n = 84, , p_value_slope < 0.05')
legend(x = 50, y = 0.005,legend = 'hsp90', col = 'red', pch = 19)
title('Slopes of linear regression \"Kn/Ks\" ~ \"generation length\"\n for genes closed to hsp90 (red)\n n = 84, , p_value_slope < 0.05, intercept = 0')
boxplot(results[results$p_val_slope < 0.05,'intercept'], ylab = 'intercept')
length(results[,'slopes'])
length(results[results$p_val_slope < 0.05,'slopes'])
boxplot(results[results$p_val_slope < 0.01,'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
title('Slopes of linear regression \"Kn/Ks\" ~ \"generation length\"\n for genes closed to hsp90 (red)\n n = 50, p_value_slope < 0.01')
length(results[results$p_val_slope < 0.01,'slopes'])
#do we need fiter significant p-val??
plot(results[,'intercept'], results[,'slopes'],
xlab = 'intecept', ylab = 'slope')
plot(results$R_sq)
boxplot(results$R_sq)
points(results[results$genes == 'dN.dS_ENSG00000096384','R_sq'], col = 'red', pch = 19)
pdf('../../Body/4_Figures/hsp.like.genes.linear.model.slopes.right.way.zerro.intercept.pdf')
boxplot(results[,'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
title('Slopes of linear regression \"Kn/Ks\" ~ \"generation length\"\n for genes closed to hsp90 (red)\n n = 177, intercept = 0')
legend(x = 0, y = 8e-05,legend = 'hsp90', col = 'red', pch = 19)
boxplot(results[results$p_val_slope < 0.05,'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
title('Slopes of linear regression \"Kn/Ks\" ~ \"generation length\"\n for genes closed to hsp90 (red)\n n = 177, , p_value_slope < 0.05, intercept = 0')
legend(x = 50, y = 0.005,legend = 'hsp90', col = 'red', pch = 19)
plot(results[results$p_val_slope < 0.01,'intercept'], results[results$p_val_slope < 0.01,'slopes'],
xlab = 'intecept', ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384','intercept'], results[results$genes == 'dN.dS_ENSG00000096384','slopes'], col = 'red', pch = 19)
dev.off()
rm(list=ls(all=TRUE))
df <- read.table('../../Body/2_Derived/kn.ks.all.hsp.txt')
df[df == 'n/a'] <- NA
df[, -1] <- sapply(df[, -1], as.vector)
df[, -1] <- sapply(df[, -1], as.numeric)
#table with linear regression parameters
results <- data.frame(genes, slopes, intercept, p_val_slope, p_val_intercept, number_of_species, R_sq, R_sq_adj, residual_std_err)
#### drawing plots
results <- read.table('../../Body/3_Results/linear.regression.kn.ks.vs.generation.length.all.hsp.mammals.txt')
hsps  <- read.table('../../Body/2_Derived/human.hsp.ensID.group.txt', header = T, sep = '\t')
hsps$Ensembl.gene.ID <- paste('dN.dS_', hsps$Ensembl.gene.ID, sep = '')
results <- merge(x = results, y = hsps, by.x = 'genes', by.y = 'Ensembl.gene.ID')
library(ggplot2)
theme_set(theme_bw())
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results, aes(intercept, slopes), alpha = 0.5)+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
View(results)
View(hsps)
gg <- ggplot(results[results$Group.name == 'Heat shock 90kDa proteins'], aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
gg <- ggplot(results[results$Group.name == 'Heat shock 90kDa proteins',], aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
par(mfcol = c(2,1))
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results[results$Group.name == 'Heat shock 90kDa proteins',], aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
par(mfcol = c(2,1))
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name, alpha = 0.05))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results[results$Group.name != 'DNAJ (HSP40) heat shock proteins'], aes(intercept, slopes))+
geom_point(aes(col = Group.name, alpha = 0.05))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results[results$Group.name != 'DNAJ (HSP40) heat shock proteins',], aes(intercept, slopes))+
geom_point(aes(col = Group.name, alpha = 0.05))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results[results$Group.name,], aes(intercept, slopes))+
geom_point(aes(col = Group.name, alpha = 0.05))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
pdf('../../Body/4_Figures/all.hsp.linear.model.slopes.pdf')
rm(list=ls(all=TRUE))
df <- read.table('../../Body/2_Derived/kn.ks.all.hsp.txt')
df[df == 'n/a'] <- NA
df[, -1] <- sapply(df[, -1], as.vector)
df[, -1] <- sapply(df[, -1], as.numeric)
#delete columns with too much NA
todrop <- c()
for (col in colnames(df[,-c(1,96)])) {
if (sum(is.na(df[,col])) > 35) {
todrop <- c(todrop, col)
}
}
df <- df[, !(names(df) %in% todrop)]
#saving linear regression parameters
slopes <- c()
p_val_slope <- c()
intercept <- c()
p_val_intercept <- c()
R_sq <- c()
R_sq_adj <- c()
residual_std_err <- c()
number_of_species <- c()
genes <- colnames(df)[-c(1,75)]
for (gene in genes) {
#a <- na.omit(df[,c(gene, 'Generation_Length')])
if ((length(df[,gene]) - sum(is.na(df[,gene]))) < 10){
print(gene)
genes <- genes[genes != gene]
next
}
a <- na.omit(df[,c("Species", gene, 'Generation_Length')])
species <- a[,'Species']
number_of_species <- c(number_of_species, length(species))
lg <- lm(a[,gene]~0+ a[,'Generation_Length'], data = a)
sum <- summary(lg)
b <- sum$coefficients
slopes <- c(slopes, b[2,1])
p_val_slope <- c(p_val_slope, b[2,4])
intercept <- c(intercept, b[1,1])
p_val_intercept <- c(p_val_intercept, b[1,4])
R_sq <- c(R_sq, sum$r.squared)
R_sq_adj <- c(R_sq_adj, sum$adj.r.squared)
residual_std_err <- c(residual_std_err, sum$sigma)
}
b
lopes <- c()
p_val_slope <- c()
R_sq <- c()
R_sq_adj <- c()
residual_std_err <- c()
number_of_species <- c()
genes <- colnames(df)[-c(1,75)]
for (gene in genes) {
#a <- na.omit(df[,c(gene, 'Generation_Length')])
if ((length(df[,gene]) - sum(is.na(df[,gene]))) < 10){
print(gene)
genes <- genes[genes != gene]
next
}
a <- na.omit(df[,c("Species", gene, 'Generation_Length')])
species <- a[,'Species']
number_of_species <- c(number_of_species, length(species))
lg <- lm(a[,gene]~0+ a[,'Generation_Length'], data = a)
sum <- summary(lg)
b <- sum$coefficients
slopes <- c(slopes, b[1])
p_val_slope <- c(p_val_slope, b[4])
R_sq <- c(R_sq, sum$r.squared)
R_sq_adj <- c(R_sq_adj, sum$adj.r.squared)
residual_std_err <- c(residual_std_err, sum$sigma)
}
#table with linear regression parameters
results <- data.frame(genes, slopes, p_val_slope, number_of_species, R_sq, R_sq_adj, residual_std_err)
write.table(results, '../../Body/3_Results/linear.regression.kn.ks.vs.generation.length.all.hsp.mammals.zerro.intercept.txt'            )
#### drawing plots
results <- read.table('../../Body/3_Results/linear.regression.kn.ks.vs.generation.length.all.hsp.mammals.zerro.intercept.txt')
hsps  <- read.table('../../Body/2_Derived/human.hsp.ensID.group.txt', header = T, sep = '\t')
hsps$Ensembl.gene.ID <- paste('dN.dS_', hsps$Ensembl.gene.ID, sep = '')
results <- merge(x = results, y = hsps, by.x = 'genes', by.y = 'Ensembl.gene.ID')
View(results)
boxplot(slopes~Group.name, data = results)
boxplot(results[,'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
boxplot(slopes~Group.name, data = results)
View(results)
results[results$Group.name == 'DNAJ (HSP40) heat shock proteins', 'Group.name'] = 'HSP40'
results[results$Group.name == 'DNAJ (HSP40) heat shock proteins', 'Group.name']
results <- merge(x = results, y = hsps, by.x = 'genes', by.y = 'Ensembl.gene.ID')
#### drawing plots
results <- read.table('../../Body/3_Results/linear.regression.kn.ks.vs.generation.length.all.hsp.mammals.zerro.intercept.txt')
results <- merge(x = results, y = hsps, by.x = 'genes', by.y = 'Ensembl.gene.ID')
results[results$Group.name == 'DNAJ (HSP40) heat shock proteins', 'Group.name']
results[results == 'Group.name']
results[results$Group.name == 'DNAJ (HSP40) heat shock proteins', 'Group.name'] = 'HSP40'
#### drawing plots
results <- read.table('../../Body/3_Results/linear.regression.kn.ks.vs.generation.length.all.hsp.mammals.zerro.intercept.txt')
results <- merge(x = results, y = hsps, by.x = 'genes', by.y = 'Ensembl.gene.ID')
results[results$Group.name == 'DNAJ (HSP40) heat shock proteins', 'Group.name'] = rep('HSP40', length(results[results$Group.name == 'DNAJ (HSP40) heat shock proteins', 'Group.name']))
rep('HSP40', length(results[results$Group.name == 'DNAJ (HSP40) heat shock proteins', 'Group.name']))
#### drawing plots
results <- read.table('../../Body/3_Results/linear.regression.kn.ks.vs.generation.length.all.hsp.mammals.zerro.intercept.txt')
boxplot(slopes~Group.name, data = results, ylab ='slope')
results <- merge(x = results, y = hsps, by.x = 'genes', by.y = 'Ensembl.gene.ID')
boxplot(slopes~Group.name, data = results, ylab ='slope')
title('lm(Kn/Ks ~ 0 + Generation_Length)')
plot(results[results$Group.name == 'Heat shock 90kDa proteins', 'slopes'])
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
plot(results[results$Group.name == 'Heat shock 90kDa proteins', 'slopes'], ylab = 'slope')
results[results$Group.name == 'Heat shock 90kDa proteins',]
points(results[results$genes == 'dN.dS_ENSG00000126602', 'slopes'], col = 'blue', pch = 19)
points(results[results$genes == 'dN.dS_ENSG00000166598', 'slopes'], col = 'green', pch = 19)
boxplot(results[results$Group.name == 'Heat shock 90kDa proteins', 'slopes'], ylab = 'slope')
points(results[results$genes == 'dN.dS_ENSG00000096384', 'slopes'], col = 'red', pch = 19)
points(results[results$genes == 'dN.dS_ENSG00000126602', 'slopes'], col = 'blue', pch = 19)
points(results[results$genes == 'dN.dS_ENSG00000166598', 'slopes'], col = 'green', pch = 19)
title('Heat shoch 90kDa proteins\nlm(Kn/Ks ~ 0 + Generation_Length')
View(df)
df$dN.dS_ENSG00000080824
legend(x =0, col = c('blue', 'green','red'), pch = c(19,19,19), legend = c('TRAP1', 'HSP90B1', 'HSP90AB1'))
legend(x =0, y=0.00001 col = c('blue', 'green','red'), pch = c(19,19,19), legend = c('TRAP1', 'HSP90B1', 'HSP90AB1'))
legend(x =0, y=0.00001, col = c('blue', 'green','red'), pch = c(19,19,19), legend = c('TRAP1', 'HSP90B1', 'HSP90AB1'))
legend(x =2, y=0.00001, col = c('blue', 'green','red'), pch = c(19,19,19), legend = c('TRAP1', 'HSP90B1', 'HSP90AB1'))
legend('bottomleft', col = c('blue', 'green','red'), pch = c(19,19,19), legend = c('TRAP1', 'HSP90B1', 'HSP90AB1'))
rm(list=ls(all=TRUE))
tables <- list.files('../../Body/1_Raw/Ensemble_Compara_all_hsp/')
whole_table <- setNames(data.frame(matrix(ncol = 1, nrow = 0)), c('Species'))
for (file in tables) {
table <- paste('../../Body/1_Raw/Ensemble_Compara_all_hsp/', file, sep = '')
table <- read.table(table, sep = ',', header = T)
table <- table[table$Type == '1-to-1View Gene Tree',c("Species",'dN.dS')]
ens <- gsub('.csv', '', gsub('^.*orthologues-ComparaOrthologs-Homo_sapiens_Gene_Compara_Ortholog_', '',file))
colnames(table) <- c('Species', paste('dN.dS_', ens, sep = ''))
whole_table <- merge(whole_table, table, by = 'Species', all = T)
}
View(whole_table)
whole_table$dN.dS_ENSG00000080824
is.na(whole_table$dN.dS_ENSG00000080824)
sum(is.na(whole_table$dN.dS_ENSG00000080824))
sum(!is.na(whole_table$dN.dS_ENSG00000080824))
glenght_table <- read.table('../../Body/2_Derived/GenerationLenghtforMammals.csv', sep = ',', header = T)
#glenght_table <- glenght_table[, c('Scientific_name', 'Calculated_GL_d')]
Species <- gsub('\\)', '',gsub('^([a-z]|[A-Z]|\ |-|\'|[0-9])*\\(', '', whole_table$Species))
library(stringr)
whole_table$Species <- word(Species, 1, 2)
whole_table$Generation_Length <- NA
for (species in whole_table$Species){
if (species %in% glenght_table$Scientific_name){
whole_table[whole_table$Species == species,'Generation_Length'] <-  glenght_table[glenght_table$Scientific_name == species, 'GenerationLength_d']
}
}
whole_table[!is.na(whole_table$Generation_Length),]
whole_table[!is.na(whole_table$Generation_Length),]
dim(whole_table[!is.na(whole_table$Generation_Length),])
whole_table <- whole_table[!is.na(whole_table$Generation_Length),]
sum(is.na(whole_table$dN.dS_ENSG00000080824))
rm(list=ls(all=TRUE))
df <- read.table('../../Body/2_Derived/kn.ks.all.hsp.txt')
df$dN.dS_ENSG00000080824
sapply(df, sum(is.na()))
sapply(df, sum(is.na(x)))
?sapply
?apply
aplly(df, 2, sum(is.na()))
apply(df, 2, sum(is.na()))
function(x){}
return(sum(is.na(x)))
f <- function(x){
return(sum(is.na(x)))
}
apply(df, 2, f)
f <- function(x){
return(sum(!is.na(x)))
}
apply(df, 2, f)
df$dN.dS_ENSG00000090520
rm(list=ls(all=TRUE))
All_best_var <- read.table('../../Body/2_Derived/All.best.vat.all.tissue.variants.outside.genes.important.columns.txt')
genes.like.hsp <- as.vector(read.table('../../Body/2_Derived/hsp.like.genes.pca.genes.ranged.by.distance.to.hsp.txt')[1:300,1])
All_best_var_genes_like_hsp <- All_best_var[grepl(paste(genes.like.hsp, collapse="|"), All_best_var$cis_eQTL_id),] #choose hsp-like genes only
View(All_best_var_genes_like_hsp)
dim(All_best_var_genes_like_hsp[All_best_var_genes_like_hsp$Assessed_Allele_Freq >= 0.05,])
All_best_var_genes_like_hsp_freq <- (All_best_var_genes_like_hsp[All_best_var_genes_like_hsp$Assessed_Allele_Freq >= 0.05,])
All_best_var_genes_like_hsp_freq[grepl('ENSG00000096384', All_best_var_genes_like_hsp_freq$cis_eQTL_id),]
dim(All_best_var_genes_like_hsp_freq[grepl('ENSG00000096384', All_best_var_genes_like_hsp_freq$cis_eQTL_id),])
hsp_LOE <- All_best_var_hsp[All_best_var_hsp$slope < 0, 'Assessed_Allele_Freq']
hsp_GOE <- All_best_var_hsp[All_best_var_hsp$slope > 0, 'Assessed_Allele_Freq']
#look at hsp90
All_best_var_hsp <- All_best_var_genes_like_hsp[grepl('ENSG00000096384', All_best_var_genes_like_hsp$cis_eQTL_id),]
hsp_LOE <- All_best_var_hsp[All_best_var_hsp$slope < 0, 'Assessed_Allele_Freq']
hsp_GOE <- All_best_var_hsp[All_best_var_hsp$slope > 0, 'Assessed_Allele_Freq']
x <- c(hsp_GOE, hsp_LOE)
gp = c(rep("hsp90 GOE Assessed allele freq", length(hsp_GOE)),rep("hsp90 LOE Assessed allele freq",length(hsp_LOE)))
boxplot(x ~ gp, xlab = '')
boxplot(x ~ gp, xlab = '', ylab = 'Assesed allele frequency')
# count tissues in which each unique cis-eQTL is occured
cis_eQTL_id <- as.array(unique(All_best_var_genes_like_hsp_freq$cis_eQTL_id))
LOE_tissues <- c()
GOE_tissues <- c()
#the loop takes a while
for (QTL in cis_eQTL_id){
LOE_count <- 0
LOE <- All_best_var_genes_like_hsp_freq[(All_best_var_genes_like_hsp_freq$cis_eQTL_id == QTL) & (All_best_var_genes_like_hsp_freq$slope < 0),]$Tissue
LOE_count <- length(unique(LOE))
LOE_tissues <- c(LOE_tissues, LOE_count)
GOE_count <- 0
GOE <- All_best_var_genes_like_hsp_freq[(All_best_var_genes_like_hsp_freq$cis_eQTL_id == QTL) & (All_best_var_genes_like_hsp_freq$slope > 0),]$Tissue
GOE_count <- length(unique(GOE))
GOE_tissues <- c(GOE_tissues, GOE_count)
}
#saving results
cis_eQTL_id <- as.vector(cis_eQTL_id)
tissue_numbers <- data.frame(cbind(cis_eQTL_id, LOE_tissues, GOE_tissues))
boxplot(tissue_numbers$LOE_tissues,tissue_numbers$GOE_tissues)
tissue_numbers$LOE_tissues
as.integer(tissue_numbers$LOE_tissues)
as.numeric(tissue_numbers$LOE_tissues)
as.numeric(as.vector(tissue_numbers$LOE_tissues))
boxplot(as.numeric(as.vector(tissue_numbers$LOE_tissues)),as.numeric(as.vector(tissue_numbers$GOE_tissues)))
write.table(tissue_numbers, '../../Body/2_Derived/Gtex.LOE.GOE.tissues.numbers.frec.more.5.perc.txt')
tissue_num <- read.table('../../Body/2_Derived/Gtex.LOE.GOE.tissues.numbers.frec.more.5.perc.txt')
gene <- gsub('.*b37_','', tissue_num$cis_eQTL_id)
tissue_num <- cbind(tissue_num, gene)
LOE_tissues <- c()
LOE_cis_eQTLs <- c()
GOE_tissues <- c()
GOE_cis_eQTLs <- c()
unique_genes <- unique(gene)
for (g in unique_genes){
#count common amount of tissues for each gene in which there is cis-eQTLs
loe_tis <- sum(tissue_num[tissue_num$gene == g,'LOE_tissues'])
goe_tis <- sum(tissue_num[tissue_num$gene == g,'GOE_tissues'])
LOE_tissues <- c(LOE_tissues,loe_tis)
GOE_tissues <- c(GOE_tissues,goe_tis)
#count common amount of unique cis-eQTLs for each gene
loe_eqtl <- dim(tissue_num[(tissue_num$gene == g) & (tissue_num$LOE_tissues > 0),])[1]
goe_eqtl <- dim(tissue_num[(tissue_num$gene == g) & (tissue_num$GOE_tissues > 0),])[1]
LOE_cis_eQTLs <- c(LOE_cis_eQTLs, loe_eqtl)
GOE_cis_eQTLs <- c(GOE_cis_eQTLs, goe_eqtl)
}
#saving results
df <- data.frame(cbind(unique_genes, as.numeric(as.vector(LOE_tissues)), as.numeric(as.vector(GOE_tissues)), as.numeric(as.vector(LOE_cis_eQTLs)), as.numeric(as.vector(GOE_cis_eQTLs))) )
colnames(df) <- c('gene', 'LOE_tissues', 'GOE_tissues', 'LOE_cis_eQTLs', 'GOE_cis_eQTLs')
plot(LOE_tissues,GOE_tissues, asp = 1, xlab = 'LOE cis-eQTL sum in all tissue', ylab = 'GOE cis-eQTL sum in all tissue')
points(LOE_tissues[which(unique_genes == 'ENSG00000096384')], GOE_tissues[which(unique_genes == 'ENSG00000096384')], col = 'red', pch = 19)
boxplot(LOE_cis_eQTLs, GOE_cis_eQTLs, names = c('LOE', 'GOE'))
boxplot(GOE_cis_eQTLs/LOE_cis_eQTLs)
points(GOE_cis_eQTLs[which(unique_genes == 'ENSG00000096384')]/LOE_cis_eQTLs[which(unique_genes == 'ENSG00000096384')], col = 'red', pch = 19)
boxplot(GOE_tissues/LOE_tissues)
points(GOE_tissues[which(unique_genes == 'ENSG00000096384')]/LOE_tissues[which(unique_genes == 'ENSG00000096384')], col = 'red', pch = 19)
title('GOE/LOE tissue number')
legend(1.2, 16, legend = 'hsp90', col = 'red', pch = 19)
title('GOE/LOE tissue number\nAssesed allele frequency > 5%')
legend('Uprigth', legend = 'hsp90', col = 'red', pch = 19)
legend('toprigth', legend = 'hsp90', col = 'red', pch = 19)
legend('topright', legend = 'hsp90', col = 'red', pch = 19)
boxplot(GOE_tissues/LOE_tissues)
points(GOE_tissues[which(unique_genes == 'ENSG00000096384')]/LOE_tissues[which(unique_genes == 'ENSG00000096384')], col = 'red', pch = 19)
title('GOE/LOE tissue number\nAssesed allele frequency > 5%')
legend('topright', legend = 'hsp90', col = 'red', pch = 19)
legend('right', legend = 'hsp90', col = 'red', pch = 19)
legend('topright', legend = 'hsp90', col = 'red', pch = 19)
boxplot(GOE_tissues/LOE_tissues)
points(GOE_tissues[which(unique_genes == 'ENSG00000096384')]/LOE_tissues[which(unique_genes == 'ENSG00000096384')], col = 'red', pch = 19)
title('GOE/LOE tissue number\nAssesed allele frequency > 5%')
legend('topright', legend = 'hsp90', col = 'red', pch = 19)
LOE <- All_best_var_genes_like_hsp[All_best_var_genes_like_hsp$slope < 0, 'Assessed_Allele_Freq']
GOE <- All_best_var_genes_like_hsp[All_best_var_genes_like_hsp$slope > 0, 'Assessed_Allele_Freq']
boxplot(LOE, GOE)
boxplot(LOE, GOE, labels=c('LOE', 'GOE'))
boxplot(LOE, GOE, names=c('LOE', 'GOE'), ylab = 'Assesed allele frequency')
title('cis-eQTL assesed allele frequency')
rm(list=ls(all=TRUE))
#### drawing plots
results <- read.table('../../Body/3_Results/linear.regression.kn.ks.vs.generation.length.all.hsp.mammals.txt')
hsps  <- read.table('../../Body/2_Derived/human.hsp.ensID.group.txt', header = T, sep = '\t')
hsps$Ensembl.gene.ID <- paste('dN.dS_', hsps$Ensembl.gene.ID, sep = '')
results <- merge(x = results, y = hsps, by.x = 'genes', by.y = 'Ensembl.gene.ID')
library(ggplot2)
theme_set(theme_bw())
gg <- ggplot(results[results$Group.name,], aes(intercept, slopes))+
geom_point(aes(col = Group.name, alpha = 0.05))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
View(results)
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
geom_point(data =results[results$genes == 'dN.dS_ENSG00000144381'])
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
geom_point(data =results[results$genes == 'dN.dS_ENSG00000144381'])
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
geom_point(data =results[results$genes == 'dN.dS_ENSG00000144381'], aes(intercept, slope))
theme_set(theme_bw())
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
geom_point(data =results[results$genes == 'dN.dS_ENSG00000144381'], aes(intercept, slope))
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
geom_point(data =results[results$genes == 'dN.dS_ENSG00000144381'], aes(intercept, slope))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
geom_point(data =results[results$genes == 'dN.dS_ENSG00000144381',], aes(intercept, slope))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
gg <- ggplot(results, aes(intercept, slopes))+
geom_point(aes(col = Group.name))+
geom_point(data =results[results$genes == 'dN.dS_ENSG00000144381',], aes(intercept, slopes))+
xlab('intercept')+
ylab('slope')+
labs(title ='Slope vs intercept all hsp genes', subtitle = 'n=73')
print(gg)
results[results$genes == 'dN.dS_ENSG00000144381',]
